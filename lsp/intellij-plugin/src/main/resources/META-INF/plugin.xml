<!-- Copyright 2000-2022 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. -->
<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->

<idea-plugin>

  <!-- Unique id for this plugin. Must stay constant for the life of the plugin. -->
  <id>community.flock.wire_spec.lsp.intellij_plugin</id>

  <!-- Text to display as name on Preferences/Settings | Plugin page -->
  <name>Wire spec</name>

  <!-- Product and plugin compatibility requirements -->
  <depends>com.intellij.modules.platform</depends>

  <!-- Text to display as description on Preferences/Settings | Plugin page -->
  <description>
    <![CDATA[
      Wire-spec intellij plugin for a great developer experience.
    ]]>
  </description>
  <change-notes>
    <![CDATA[
      <ul>
        <li><b>1.0.0</b> Initial version</li>
      </ul>
    ]]>
  </change-notes>

  <!-- Text to display as company information on Preferences/Settings | Plugin page -->
  <vendor url="https://flock.community">Flock. community</vendor>

  <extensions defaultExtensionNs="com.intellij">
    <fileType name="wire-spec" implementationClass="community.flock.wire_spec.lsp.intellij_plugin.FileType" fieldName="INSTANCE" language="wire-spec" extensions="ws"/>

    <!-- register a preloading activity. You need to init IntellijLanguageClient with your config, see readme -->
    <postStartupActivity implementation="community.flock.wire_spec.lsp.intellij_plugin.Preloading" id="community.flock.wire_spec.lsp.intellij_plugin.Preloading"/>

    <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
    <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>

    <!-- register a listener on editor events, required for lsp file sync -->
    <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>
    <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

    <!-- for displaying notifications by lsp -->
    <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>

    <!-- for displaying the statusbar icon -->
    <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                            id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                            order="first" />

    <!-- needed for completion -->
    <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                            id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="wire-spec"/>

    <!-- needed for completion as well as signature help -->
    <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                  id="LSPTypedHandler"/>

    <!-- needed for code diagnostics -->
    <externalAnnotator id="LSPAnnotator" language="wire-spec"
                       implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>

    <!-- needed for Workspace Symbols -->
    <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"
                           id="LSPSymbolContributor"/>

  </extensions>

  <actions>
    <!-- needed for hover -->
    <action id="org.intellij.sdk.action.QuickDocAction" class="org.wso2.lsp4intellij.actions.LSPQuickDocAction">
    </action>

    <!-- needed for find references -->
    <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction" id="LSPFindUsages">
      <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
    </action>
  </actions>
  <applicationListeners>
    <!-- required for lsp file sync -->
    <listener class="org.wso2.lsp4intellij.listeners.VFSListener"
              topic="com.intellij.openapi.vfs.VirtualFileListener"/>
    <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"
              topic="com.intellij.openapi.project.ProjectManagerListener"/>
  </applicationListeners>

  <!-- Product and plugin compatibility requirements.
     Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
  <depends>com.intellij.modules.platform</depends>
  <depends>JavaScript</depends>

</idea-plugin>
