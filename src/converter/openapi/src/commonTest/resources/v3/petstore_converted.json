{
  "openapi": "3.0.0",
  "info": {
    "title": "Wirespec",
    "version": "0.0.0"
  },
  "paths": {
    "/pet": {
      "put": {
        "operationId": "UpdatePet",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "UpdatePet 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "UpdatePet 400 response"
          },
          "404": {
            "description": "UpdatePet 404 response"
          },
          "405": {
            "description": "UpdatePet 405 response"
          }
        }
      },
      "post": {
        "operationId": "AddPet",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "AddPet 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "405": {
            "description": "AddPet 405 response"
          }
        }
      }
    },
    "/pet/findByStatus": {
      "get": {
        "operationId": "FindPetsByStatus",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/FindPetsByStatusParameterStatus"
            },
            "name": "status",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "FindPetsByStatus 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "FindPetsByStatus 400 response"
          }
        }
      }
    },
    "/pet/findByTags": {
      "get": {
        "operationId": "FindPetsByTags",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "tags",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "FindPetsByTags 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "FindPetsByTags 400 response"
          }
        }
      }
    },
    "/pet/{petId}": {
      "get": {
        "operationId": "GetPetById",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "petId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "GetPetById 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "GetPetById 400 response"
          },
          "404": {
            "description": "GetPetById 404 response"
          }
        }
      },
      "post": {
        "operationId": "UpdatePetWithForm",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "petId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "name",
            "in": "header"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "status",
            "in": "header"
          }
        ],
        "responses": {
          "405": {
            "description": "UpdatePetWithForm 405 response"
          }
        }
      },
      "delete": {
        "operationId": "DeletePet",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "petId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "api_key",
            "in": "query"
          }
        ],
        "responses": {
          "400": {
            "description": "DeletePet 400 response"
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "petId",
          "in": "path"
        }
      ]
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "operationId": "UploadFile",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "petId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "additionalMetadata",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "UploadFile 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "petId",
          "in": "path"
        }
      ]
    },
    "/store/inventory": {
      "get": {
        "operationId": "GetInventory",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "GetInventory 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/store/order": {
      "post": {
        "operationId": "PlaceOrder",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "PlaceOrder 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "405": {
            "description": "PlaceOrder 405 response"
          }
        }
      }
    },
    "/store/order/{orderId}": {
      "get": {
        "operationId": "GetOrderById",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "orderId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "GetOrderById 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "GetOrderById 400 response"
          },
          "404": {
            "description": "GetOrderById 404 response"
          }
        }
      },
      "delete": {
        "operationId": "DeleteOrder",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "orderId",
            "in": "path"
          }
        ],
        "responses": {
          "400": {
            "description": "DeleteOrder 400 response"
          },
          "404": {
            "description": "DeleteOrder 404 response"
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "orderId",
          "in": "path"
        }
      ]
    },
    "/user": {
      "post": {
        "operationId": "CreateUser",
        "parameters": [
        ],
        "responses": {
          "default": {
            "description": "CreateUser default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "operationId": "CreateUsersWithListInput",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "CreateUsersWithListInput 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "CreateUsersWithListInput default response"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "operationId": "LoginUser",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "username",
            "in": "header"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "password",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "LoginUser 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "LoginUser 400 response"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "operationId": "LogoutUser",
        "parameters": [
        ],
        "responses": {
          "default": {
            "description": "LogoutUser default response"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "operationId": "GetUserByName",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "GetUserByName 200 response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "GetUserByName 400 response"
          },
          "404": {
            "description": "GetUserByName 404 response"
          }
        }
      },
      "put": {
        "operationId": "UpdateUser",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "default": {
            "description": "UpdateUser default response"
          }
        }
      },
      "delete": {
        "operationId": "DeleteUser",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "400": {
            "description": "DeleteUser 400 response"
          },
          "404": {
            "description": "DeleteUser 404 response"
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "petId": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "shipDate": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "complete": {
            "type": "boolean"
          }
        }
      },
      "Customer": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        }
      },
      "Address": {
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        }
      },
      "Category": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer"
          }
        }
      },
      "Tag": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Pet": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "$ref": "#/components/schemas/PetStatus"
          }
        },
        "required": [
          "name",
          "photoUrls"
        ]
      },
      "ApiResponse": {
        "properties": {
          "code": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "FindPetsByStatusParameterStatus": {
        "type": "string",
        "enum": [
          "available",
          "pending",
          "sold"
        ]
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "placed",
          "approved",
          "delivered"
        ]
      },
      "PetStatus": {
        "type": "string",
        "enum": [
          "available",
          "pending",
          "sold"
        ]
      }
    }
  }
}