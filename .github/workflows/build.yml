name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches:
  release:
    types: [ "created" ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run
        run: |
          make build
      - name: Archive linux cli
        uses: actions/upload-artifact@v4
        with:
          name: wirespec-cli-linux
          path: src/plugin/cli/build/bin/linuxX64/releaseExecutable/cli.kexe
      - name: Archive macosX86 cli
        uses: actions/upload-artifact@v4
        with:
          name: wirespec-cli-macos-x86
          path: src/plugin/cli/build/bin/macosX64/releaseExecutable/cli.kexe
      - name: Archive macosArm64 cli
        uses: actions/upload-artifact@v4
        with:
          name: wirespec-cli-macos-arm64
          path: src/plugin/cli/build/bin/macosArm64/releaseExecutable/cli.kexe
      - name: Archive vscode extension
        uses: actions/upload-artifact@v4
        with:
          name: wirespec-vscode
          path: src/ide/vscode/wirespec-client-vscode-*.vsix
      - name: Archive Intellij plugin
        uses: actions/upload-artifact@v4
        with:
          name: wirespec-intellij-plugin
          path: src/ide/intellij-plugin/build/distributions/intellij-plugin-*.zip

  example:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run
        run: |
          make example

  version:

    runs-on: ubuntu-latest

    if: github.event_name == 'release' && github.event.action == 'created'

    needs:
      - build
      - example

    outputs:
      version: ${{steps.version.outputs.version}}

    steps:
      - uses: actions/checkout@v3
      - id: version
        name: Generate version
        uses: ./.github/actions/version
        with:
          version: ${{ github.event.release.tag_name }}

  release-intellij:

    runs-on: ubuntu-latest

    needs:
      - version

    env:
      VERSION: ${{needs.version.outputs.version}}
      JETBRAINS_TOKEN: ${{ secrets.JETBRAINS_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      - name: Run
        run: |
          ./gradlew :src:ide:intellij-plugin:publishPlugin

  release-vscode:

    runs-on: ubuntu-latest

    needs:
      - version

    env:
      VERSION: ${{needs.version.outputs.version}}
      VSCE_PAT: ${{ secrets.VSCODE_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Build lib
        run: |
          ./gradlew src:plugin:arguments:jvmJar \
                    src:plugin:npm:jsNodeProductionLibraryDistribution
      - name: Build vscode extension
        working-directory: ./src/ide/vscode
        run: |
          npm i
          npm run build 
          npm version $VERSION
          npm run vscode:publish 

  release-cli:

    runs-on: ubuntu-latest

    needs:
      - version

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wirespec-cli-macos-x86
          path: artifacts/macosX64
      - uses: actions/download-artifact@v4
        with:
          name: wirespec-cli-macos-arm64
          path: artifacts/macosArm64
      - uses: actions/download-artifact@v4
        with:
          name: wirespec-cli-linux
          path: artifacts/linuxX64
      - run: |
          mkdir uploads
          cp artifacts/linuxX64/cli.kexe uploads/linuxX64.kexe
          cp artifacts/macosX64/cli.kexe uploads/macosX64.kexe
          cp artifacts/macosArm64/cli.kexe uploads/macosArm64.kexe
      - name: Upload assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            uploads/linuxX64.kexe
            uploads/macosX64.kexe
            uploads/macosArm64.kexe

  release-maven-central:

    runs-on: ubuntu-latest

    needs:
      - version

    env:
      VERSION: ${{needs.version.outputs.version}}
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - name: Run
        run: |
          ./gradlew publish

  release-lib-npm:

    runs-on: ubuntu-latest

    needs:
      - version

    env:
      VERSION: ${{needs.version.outputs.version}}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - name: Build
        run: |
          ./gradlew build
      - name: Build
        working-directory: ./src/plugin/npm/build/dist/js/productionLibrary
        run: |
          npm publish --access public
